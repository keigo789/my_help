#+TITLE:  my_help README
#+AUTHOR:  Shigeto R. Nishitani
#+EMAIL:     (concat "nishitani@kwansei.ac.jp")
#+LANGUAGE:  jp
#+OPTIONS:   H:4 toc:t num:2
#+SETUPFILE: /Users/bob/.emacs.d/org-mode/theme-readtheorg.setup
#+STARTUP: indent nolineimages
#+OPTIONS: ^:{}

* 概要
  :PROPERTIES:
  :CUSTOM_ID: 概要
  :END:

CUI(CLA)ヘルプのUsage出力を真似て，user独自のhelpを作成・提供するgem.


* (my_helpで解決しようとする)問題点
  :PROPERTIES:
  :CUSTOM_ID: my_helpで解決しようとする問題点
  :END:

CUIやshell, 何かのプログラミング言語などを習得しようとする初心者は，
commandや文法を覚えるのに苦労します．少しのkey(とっかかり)があると
思い出すんですが，うろ覚えでは間違えて路頭に迷います．問題点は， 
+ manは基本的に英語 
+ manualでは重たい 
+ いつもおなじことをwebで検索して 
+ 同じとこ見ている 
+ memoしても，どこへ置いたか忘れる
などです．

* 特徴
  :PROPERTIES:
  :CUSTOM_ID: 特徴
  :END:

これらをCLA環境として提供しようというのが，このgemの目的です．
仕様としては， 
- userが自分にあったmanを作成 
- 雛形を提供 
- おなじformat, looks, 操作, 階層構造 
- すぐに手が届く 
- それらを追加・修正・削除できる

memoソフトでは，検索が必要となりますが，my_helpは
key(記憶のとっかかり)を提供することが目的です．
RPGでレベル上げとかアイテムを貯めるようにして，
プログラミングでスキルを発展させてください．

物覚えの悪い作者は，人の名前をitem分けして，こそっと使っています．

* 使用法
  :PROPERTIES:
  :CUSTOM_ID: 使用法
  :END:
** インストール

: $ gem install my_help
です．

** 簡単な使用法
   :PROPERTIES:
   :CUSTOM_ID: 簡単な使用法
   :END:

まずは，
#+begin_example
> my_help
NAME
    my_help - make own help and list.

SYNOPSIS
    my_help [global options] command [command options] [arguments...]

VERSION
    0.7.0

GLOBAL OPTIONS
    --help    - Show this message
    --version - Display the program version

COMMANDS
    delete - delete HELP_NAME help
    edit   - edit HELP_NAME help
    help   - Shows a list of commands or help for one command
    list   - list all helps, specific HELP, or item
     new   - make new HELP_NAME
#+end_example
としてください．このlistにargsやitemを加えて行くとわかると思います．

: my_help list
: my_help list emacs
: my_help list emacs -f
: my_help list emacs file
として動かしてみてください．


#+BEGIN_EXAMPLE
- emacsのキーバインド
- 
特殊キー操作
-   C-f, controlキーを押しながら    'f'
-   M-f, escキーを押した後一度離して'f'
-     操作の中断C-g, 操作の取り消し(Undo) C-x u
     , head           : head
     , license        : license
   -c, cursor         : cursor
   -e, edit           : edit
   -s, short_cut      : short_cut
   -f, file           : file
   -q, quit           : quit
   -p, page           : page
   -w, window         : window
   -b, buffer         : buffer
   -m, mode           : mode
     , query_replace  : query_replace
   -r, ruby-mode      : ruby-mode
   -d, dired          : ファイラとして使う
#+END_EXAMPLE

** 独自のhelpを作る方法
   :PROPERTIES:
   :CUSTOM_ID: 独自のhelpを作る方法
   :END:

さて，独自のhelpを作る方法です．まずは，

: my_help new new_help

で，new_helpというtemplateが用意されます．
: my_help edit new_help
で編集してください． emacs org形式で，格納されています．

: my_help delete new_help

すると消されます．
* test
testは[[/Users/bob/github/ruby_docs/testing_frameworks/test_unit/README.org]]
にあるのに従って書いている．

「Rubyベストプラクティス」にあるmustを使ったextension
を組み込んで，DSLにしている．
[[https://github.com/practicingruby/rbp/blob/master/testing/test_unit_extensions.rb]]
